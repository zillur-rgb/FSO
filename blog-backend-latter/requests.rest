GET http://localhost:5000/api/blogs

###
POST http://localhost:5000/api/blogs
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InNhbWEiLCJpZCI6IjYzZTgxMTUwY2JlNDExZGY0ZDM1OTVkYiIsImlhdCI6MTY3NjE5NjI2Mn0.WGCFrTKlypFMRYM1GaTTcqHMOOBEgfOiPGwLMVrPMZI

{
    "title" : "HTTP authentication.",
    "image":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication/http-auth-sequence-diagram.png",
    "category": [
        "Computer Science",
        "Database",
        "Programming",
        "HTTP"
    ],
    "desc" : "HTTP provides a general framework for access control and authentication. This page is an introduction to the HTTP framework for authentication, and shows how to restrict access to your server using the HTTP 'Basic' schema.''\n' '\n'The server responds to a client with a 401 (Unauthorized) response status and provides information on how to authorize with a WWW-Authenticate response header containing at least one challenge.'\n''\n'A client that wants to authenticate itself with the server can then do so by including an Authorization request header with the credentials.'\n''\n'Usually a client will present a password prompt to the user and will then issue the request including the correct Authorization header."
}

###
POST http://localhost:5000/api/users
Content-Type: application/json

{
    "username" : "zillur",
    "name": "Zillur Rahman",
    "password": "1234567890"
}

###
DELETE  http://localhost:5000/api/users/62f5ffe5b9783571bd2adfae

###
POST http://localhost:5000/api/login
Content-Type: application/json

{
    "username": "sama",
    "password": "1234567890"
}